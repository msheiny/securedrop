---
- name: Install cron-apt for unattended security upgrades.
  apt:
    name: cron-apt
    state: latest
  tags:
    - apt
    - cron-apt

- name: Copy cron-apt config file.
  copy:
    src: cron-apt-config
    dest: /etc/cron-apt/config
  tags:
    - apt
    - cron-apt

- name: Add security.list apt configuration.
  template:
    src: security.list
    dest: /etc/apt/security.list
  tags:
    - apt

- name: Configure cron-apt to update the security.list repos.
  copy:
    src: 0-update
    dest: /etc/cron-apt/action.d/0-update
  tags:
    - apt
    - cron-apt

- name: Configure cron-apt to upgrade the packages in the security.list repos.
  copy:
    src: 5-security
    dest: /etc/cron-apt/action.d/5-security
  tags:
    - apt
    - cron-apt

  # The default config file would download all security update every night
  # regardless if they were a security update. we only need it download and
  # install the security updates.
- name: Remove default cron-apt config file for downloading all updates.
  file:
    dest: /etc/cron-apt/action.d/3-download
    state: absent
  tags:
    - apt
    - cron-apt

- name: Create cron job for running cron-apt updates nightly.
  template:
    src: cron-apt-cron-job.j2
    dest: /etc/cron.d/cron-apt
    mode: '644'
    owner: root
  tags:
    - apt
    - cron-apt

- name: Perform safe upgrade to ensure all the packages are updated.
  apt:
    upgrade: safe
    update_cache: yes
    cache_valid_time: 3600
  tags:
    - apt
    - apt-upgrade

- name: Check if reboot is required due to security updates.
  stat:
    path: /var/run/reboot-required
  register: reboot_required
  # Task is read-only, so don't mark changed.
  changed_when: false
  tags:
    - reboot

- name: Reboot if required due to security updates.
  command: reboot
  when: reboot_required.stat.exists
  tags:
    - reboot

- name: Wait for server to come back.
  local_action: wait_for
  args:
    host: "{{ ansible_default_ipv4.address }}"
    port: "{{ ansible_port | default(22) }}"
    delay: 20
    search_regex: OpenSSH
    state: started
  when: reboot_required.stat.exists
  # Wait action runs on localhost, and does NOT require sudo.
  sudo: false
  tags:
    - reboot
