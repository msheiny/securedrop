---
# Really this is a check to see if we have to create the repo folder,
# if thats the case we are not under a local vagrant box with a synced
# root folder.
- name: Create src path folder
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "{{ repo_src_path }}"
    - "{{ build_path }}"
  register: ossec_src_path_results

- name: Conditional copy over current directory for repo build
  synchronize:
    src: ../../../../
    dest: "{{ repo_src_path }}"
    use_ssh_args: yes
    recursive: yes
    rsync_opts:
      - "--exclude=*.git"
      - "--exclude=*.deb"
  when: ossec_src_path_results.changed

- name: Include OSSEC download URLs.
  ossec_urls:
    ossec_version: "{{ ossec_version }}"

- name: apt-get update
  apt: update_cache=yes

- name: check if ossec was already downloaded
  stat: path="{{ build_path }}/{{ ossec_tarball_filename }}" get_md5=yes
  register: ossec_download

- debug: msg="OSSEC download exists will skip downloading again"
  when: ossec_download.stat.exists

- name: download OSSEC
  get_url:
    url: "{{ ossec_tarball_url }}"
    dest: "{{ build_path }}/{{ ossec_tarball_filename }}"
  when: not (ossec_download.stat.exists and
             ossec_download.stat.md5 == "{{ ossec_md5_checksum }}" and
             ossec_download.stat.checksum == "{{ ossec_sha1_checksum }}")

- name: check if ossec was already downloaded
  stat: path="{{ build_path }}/{{ ossec_tarball_filename }}" get_md5=yes
  register: ossec_download

- name: Fail if MD5 and SHA1 checksums for tarball are not correct.
  fail:
    msg: >
      The checksums for {{ ossec_tarball_filename }} do not match.
      Both MD5 and SHA1 checksums were inspected. The checksums
      used for the inspection where:
        MD5: {{ ossec_md5_checksum }}
        SHA1: {{ ossec_sha1_checksum }}

      The checksums found were:
        MD5: {{ ossec_download.stat.md5 }}
        SHA1: {{ ossec_download.stat.checksum }}

      Try rerunning the playbook to download the files again.
  when: not (ossec_download.stat.exists and
             ossec_download.stat.md5 == "{{ ossec_md5_checksum }}" and
             ossec_download.stat.checksum == "{{ ossec_sha1_checksum }}")

- name: install deb packages required to build ossec package
  apt: name="{{ item }}" state=latest
  with_items: "{{ build_ossec_deb_pkg_dependencies }}"

- name: extract OSSEC archive to /tmp
  unarchive:
    copy: no
    src: "{{ build_path }}/{{ ossec_tarball_filename }}"
    dest: /tmp

- name: ensure ossec /etc dir exists
  file:
    state: directory
    dest: /tmp/ossec-hids-{{ ossec_version }}/etc

- name: copy ossec preloaded vars
  template:
    src: "{{ purpose }}-preloaded-vars.conf"
    dest: /tmp/ossec-hids-{{ ossec_version }}/etc/preloaded-vars.conf

- name: run ossec installer
  command: /tmp/ossec-hids-{{ ossec_version }}/install.sh

- name: create ossec agent deb build dir
  file:
    state: directory
    dest: /tmp/{{ ossec_build_dir }}

- name: ensure the temp ossec build dir var directory exists
  file:
    state: directory
    dest: /tmp/{{ ossec_build_dir }}/var

- name: mv /var/ossec to ossec build dir
  command: cp -R /var/ossec /tmp/{{ ossec_build_dir }}/var/

- name: copy OSSEC DEBIAN dir to build dir
  command: cp -R {{ repo_src_path }}/ossec-{{ purpose }}/DEBIAN /tmp/{{ ossec_build_dir }}

- name: template the control file
  template:
    src: "{{ purpose }}_control.j2"
    dest: /tmp/{{ ossec_build_dir }}/DEBIAN/control

- name: copy OSSEC usr dir to build dir
  command: cp -R {{ repo_src_path }}/ossec-{{ purpose }}/usr /tmp/{{ ossec_build_dir }}

- name: copy OSSEC etc dir to build dir
  command: cp -R {{ repo_src_path }}/ossec-{{ purpose }}/etc /tmp/{{ ossec_build_dir }}

- name: build securedrop ossec deb package
  command: dpkg-deb --build /tmp/{{ ossec_build_dir }}

- name: move securedrop ossec deb to repo
  command: mv /tmp/{{ ossec_build_dir }}.deb {{ build_path }}

- name: delete tmp build paths
  file:
    state: absent
    dest: /tmp/{{ ossec_build_dir }}

- name: delete tmp install paths
  file:
    state: absent
    dest: /tmp/ossec-hids-{{ ossec_version }}

- name: delete ossec install directory
  file:
    state: absent
    dest: /var/ossec

- name: delete ossec init conf file
  file:
    state: absent
    dest: /etc/ossec-init.conf

- name: delete init script
  file:
    state: absent
    dest: /etc/init.d/ossec
